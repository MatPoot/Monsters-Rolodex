{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anon\\\\Desktop\\\\react\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super(); // every time state gets changed render() is recalled. So using the onclick there below fires -> fires the state change -> fires the render()\n\n    this.state = {\n      monsters: [{\n        name: \"Frankenstien\"\n      }, {\n        name: \"Dracula\"\n      }]\n    };\n  }\n\n  render() {\n    return (//    <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>test here</p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //     <p>{this.state.string}</p>\n      //     <p>{this.state.yeet}</p>\n      //     <button onClick={() => this.setState({ yeet:'Changed' })}>change text</button>\n      //   </header>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.monsters.map(monsters => React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, monsters.name)))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Anon\\Desktop\\react\\monsters-rolodex\\src\\App.js"],"names":["React","Component","App","constructor","state","monsters","name","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE5BE,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AACA,SAAKC,KAAL,GAAY;AACXC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAE;AADR,OADQ,EAIR;AACEA,QAAAA,IAAI,EAAE;AADR,OAJQ;AADC,KAAZ;AAUD;;AAGAC,EAAAA,MAAM,GAAG;AACP,WACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,GAApB,CAAwBH,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,QAAQ,CAACC,IAAd,CAApC,CAFJ;AAlBG;AAyBD;;AA5C0B;;AAiD5B,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\nconstructor() {\n  super();\n  // every time state gets changed render() is recalled. So using the onclick there below fires -> fires the state change -> fires the render()\n  this.state= {\n   monsters: [\n     {\n       name: \"Frankenstien\"\n     },\n     {\n       name: \"Dracula\"\n     }\n   ]\n  };\n}\n\n\n render() {\n   return (\n    //    <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>test here</p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //     <p>{this.state.string}</p>\n    //     <p>{this.state.yeet}</p>\n    //     <button onClick={() => this.setState({ yeet:'Changed' })}>change text</button>\n    //   </header>\n    // </div>\n<div className=\"App\">\n  {\n    this.state.monsters.map(monsters => <h1>{monsters.name}</h1>)\n  }\n</div>\n\n   )\n }\n  \n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}